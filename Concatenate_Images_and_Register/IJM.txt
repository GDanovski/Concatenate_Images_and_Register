Dialog.create('Registration Settings');Dialog.addNumber('Reference frame:', 1);Dialog.addChoice('Reference chanel:', newArray('1','2'), '1');Dialog.addChoice('N chanel:', newArray('1','2'), '2');Dialog.addCheckbox('Registration', true);Dialog.show();slice = Dialog.getNumber();chanel = Dialog.getChoice();N = Dialog.getChoice();;registration = Dialog.getCheckbox();		setBatchMode(true);if(N==1){	for (i=0; i<a.length; i++) {	var path = a[i];		var dest = File.getParent(path) + '\\Ready';File.makeDirectory(dest);	dest = dest + '\\' + File.getName(path);		open(path + '_1.tif');		rename('Concatenated Stacks');var index = 2;		while(File.exists(path + '_' + index + '.tif'))		{			open(path + '_' + index + '.tif');			var name2 = getTitle();			run('Concatenate...', '  title=[Concatenated Stacks] image1=[Concatenated Stacks] image2='+ name2 + ' image3=[-- None --]');			index++;		}		selectWindow('Concatenated Stacks');		selectWindow('Concatenated Stacks');		setSlice(slice);	if(registration==true){	run('MultiStackReg', 'stack_1=[Concatenated Stacks] action_1=Align file_1=['+dest+'_TransformationMatrices1.txt] stack_2=None action_2=Ignore file_2=[] transformation=[Rigid Body] save');	}	saveAs('Tiff', dest + '_CompositeRegistred.tif');		close();	}}else{	for (i=0; i<a.length; i++) {		var path = a[i];		var dest = File.getParent(path) + '\\Ready';		File.makeDirectory(dest);		dest = dest + '\\' + File.getName(path);		open(path + '_1.tif');		rename('Concatenated Stacks');		var index = 2;		while(File.exists(path + '_' + index + '.tif'))		{			open(path + '_' + index + '.tif');var name2 = getTitle();			run('Concatenate...', '  title=[Concatenated Stacks] image1=[Concatenated Stacks] image2='+ name2 + ' image3=[-- None --]');			index++;		}		selectWindow('Concatenated Stacks');		run('Make Substack...', 'delete slices=1-' + nSlices + '-2');		rename('Concatenated Stacks1');		selectWindow('Concatenated Stacks');		setSlice(slice);		selectWindow('Concatenated Stacks1');		setSlice(slice);	if(registration==true){ if(chanel==1){		run('MultiStackReg', 'stack_1=[Concatenated Stacks] action_1=Align file_1=['+dest+'_TransformationMatrices1.txt] stack_2=None action_2=Ignore file_2=[] transformation=[Rigid Body] save');		run('MultiStackReg', 'stack_1=[Concatenated Stacks1] action_1=[Load Transformation File] file_1=['+dest+'_TransformationMatrices1.txt] stack_2=None action_2=Ignore file_2=[] transformation=[Rigid Body]'); 		}		else{		run('MultiStackReg', 'stack_1=[Concatenated Stacks1] action_1=Align file_1=['+dest+'_TransformationMatrices2.txt] stack_2=None action_2=Ignore file_2=[] transformation=[Rigid Body] save');		run('MultiStackReg', 'stack_1=[Concatenated Stacks] action_1=[Load Transformation File] file_1=['+dest+'_TransformationMatrices2.txt] stack_2=None action_2=Ignore file_2=[] transformation=[Rigid Body]');	} }	run('Merge Channels...', 'c1=[Concatenated Stacks1] c2=[Concatenated Stacks] create');		saveAs('Tiff', dest + '_CompositeRegistred.tif');		close();	}}	 setBatchMode(false); 	 run('Quit');"